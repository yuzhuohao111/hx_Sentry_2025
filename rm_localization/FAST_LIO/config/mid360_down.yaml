/**:
    ros__parameters:
        common:
            lid_topic:  "/livox/lidar"
            imu_topic:  "/imu/data"
            time_sync_en: false         # 仅当外部时间同步确实无法进行时才打开
            time_offset_lidar_to_imu: 0.0 # 激光雷达和IMU之间的时间偏移由其他算法校准，例如LI-Init（可在README中找到）。
                                        # 无论time_sync_en是什么，此参数都将生效。因此，如果时间偏移量不完全已知，请设置为 0.0

        preprocess:
            lidar_type: 1                # 1 个用于 Livox 系列激光雷达，2 个用于 Velodyne LiDAR，3 个用于 ouster LiDAR，
            scan_line:  64
            blind: 2.0
            timestamp_unit: 3
            scan_rate: 10

        mapping:
            acc_cov: 0.1
            gyr_cov: 0.1
            b_acc_cov: 0.0001
            b_gyr_cov: 0.0001
            fov_degree:    360.0
            det_range:     100.0
            extrinsic_est_en:  true      # true：启用IMU-LiDAR外部的在线估计，
            extrinsic_T: [ -0.011, -0.02329, 0.04412 ] #Lidar相对于imu的平移矩阵
            extrinsic_R: [ 1.0, 0.0, 0.0,
                           0.0, -1.0, 0.0,
                           0.0, 0.0, -1.0 ] #Lidar相对于imu的旋转矩阵

        publish:
            path_en: true                # true: 发布路径
            scan_publish_en:  true       # false: 关闭所有点云输出
            dense_publish_en: true       # false: 降低全局帧点云扫描中的点数。
            scan_bodyframe_pub_en: true  # true: 在IMU-body-frame中输出点云扫描

        # 使用 docker 时，应输入 in docker container 的绝对路径
        map_file_path: "src/rm_localization/FAST_LIO/PCD/scan.pcd" 
        pcd_save:
            pcd_save_en: true
            interval: -1                 # 每个 pcd 文件中保存了多少个 LiDAR 帧;
                                        # -1 : 所有帧将保存在一个 pcd 文件中，当帧数过多时可能会导致内存崩溃。
        
        traj_save:
            traj_save_en: false
            traj_file_path: "src/rm_localization/FAST_LIO/PCD/328.txt"  # 使用 docker 时，应输入 in docker container 的绝对路径